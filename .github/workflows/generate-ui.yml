name: Generate UI for toy_shop project

on: push

env:
  DBT_PROFILES_DIR: ${{ github.workspace }}/getting_started/toy_shop
  SNOWFLAKE_RE_DATA_TESTING_ACCOUNT: ${{ secrets.SNOWFLAKE_RE_DATA_TESTING_ACCOUNT }}
  RE_DATA_TESTING_USER: ${{ secrets.RE_DATA_TESTING_USER }}
  RE_DATA_TESTING_PASSWORD: ${{ secrets.RE_DATA_TESTING_PASSWORD }}
  REDSHIFT_RE_DATA_TESTING_HOST: ${{ secrets.REDSHIFT_RE_DATA_TESTING_HOST }}
  BIGQUERY_TESTING_PROJECT_ID: ${{ secrets.BIGQUERY_TESTING_PROJECT_ID }}
  BIGQUERY_TESTING_SERVICE_ACCOUNT_BASE64: ${{ secrets.BIGQUERY_TESTING_SERVICE_ACCOUNT_BASE64 }}
  BIGQUERY_TESTING_SERVICE_ACCOUNT_PATH: ${{ github.workspace }}/bigquery-testing-service-account.json

jobs:
  generate-ui:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - name: Check out
        uses: actions/checkout@v2

      - uses: actions/setup-python@v1
        with:
          python-version: "3.7.x"

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Install re_data and python dependencies
        working-directory: .
        run: |
          pip install .
          pip install dbt-postgres==1.0.0

      - name: Install dbt dependencies
        working-directory: ./getting_started/toy_shop
        run: |
          dbt --version
          dbt deps

      - name: Initialize data and compute metrics
        working-directory: ./getting_started/toy_shop
        shell: bash
        run: |
          chmod +x ./setup_toy_shop.sh
          ./setup_toy_shop.sh toy_shop_postgres

      - name: Send slack alert notification
        working-directory: ./getting_started/toy_shop
        if: github.repository == 're-data/re-data'
        run: |
          re_data notify slack --start-date 2021-01-01 --end-date 2021-01-11 --profile toy_shop_postgres --webhook-url ${{secrets.RE_DATA_TESTING_SLACK_ALERTS_WEBHOOK}} --subtitle="<https://github.com/${{ github.repository }}/commit/${{ github.sha }} |View Commit - (postgres)>"

      - uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Copy overview data
        run: "cp getting_started/toy_shop/target/re_data/overview.json re_data_ui/public/overview.json"
        shell: bash

      - name: Copy dbt manifest
        run: "cp getting_started/toy_shop/target/manifest.json re_data_ui/public/dbt_manifest.json"
        shell: bash

      - name: Set homepage in package.json
        working-directory: ./re_data_ui
        run: contents=$(jq '.homepage="https://${{env.GITHUB_REPOSITORY_OWNER_PART_SLUG}}.github.io/${{env.GITHUB_REPOSITORY_NAME_PART_SLUG}}/ui-${{env.GITHUB_REF_SLUG}}"' package.json) && echo "${contents}" > package.json
        shell: bash

      - name: Install dependencies
        working-directory: ./re_data_ui
        run: |
          npm install

      - name: Build app for production
        working-directory: ./re_data_ui
        run: npm run build
        env:
          PUBLIC_URL: https://${{env.GITHUB_REPOSITORY_OWNER_PART_SLUG}}.github.io/${{env.GITHUB_REPOSITORY_NAME_PART_SLUG}}/ui-${{env.GITHUB_REF_SLUG}}

      - name: Keep only index.html, overview json and dbt_manifest.json file
        working-directory: ./re_data_ui/build
        run: |
          rm -rf static
          shopt -s extglob
          rm -- !(index.html|overview.json|dbt_manifest.json)

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./re_data_ui/build
          destination_dir: ./ui-${{env.GITHUB_REF_SLUG}}

  generate-ui-other-dbs:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.repository == 're-data/re-data'
    strategy:
      fail-fast: false
      matrix:
        database: [snowflake, bigquery, redshift]
    steps:
      - name: Check out
        uses: actions/checkout@v2

      - uses: actions/setup-python@v1
        with:
          python-version: "3.7.x"

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Set the TOY_SHOP_SCHEMA environment variable
        run: |
          echo "TOY_SHOP_SCHEMA=toy_shop_${GITHUB_REF_SLUG//-/_}" >> $GITHUB_ENV

      - name: Print TOY_SHOP_SCHEMA
        run: |
          echo $TOY_SHOP_SCHEMA

      - name: Decode service account for BigQuery
        if: matrix.database == 'bigquery'
        run: 'echo $BIGQUERY_TESTING_SERVICE_ACCOUNT_BASE64 | base64 --decode > $BIGQUERY_TESTING_SERVICE_ACCOUNT_PATH'
        shell: bash

      - name: Install re_data and python dependencies
        working-directory: .
        run: |
          pip install .
          pip install dbt-${{ matrix.database }}==1.0.0

      - name: Replace sources schema in dbt_project.yml vars
        working-directory: ./getting_started/toy_shop
        run: |
          sed -ri 's/^(\s*)(schema\s*:\s*toy_shop_sources\s*$)/\1schema: ${{ env.TOY_SHOP_SCHEMA }}_sources/' dbt_project.yml
          cat dbt_project.yml

      - name: Install dbt dependencies
        working-directory: ./getting_started/toy_shop
        run: |
          dbt --version
          dbt deps

      - name: Drop schemas
        working-directory: ./getting_started/toy_shop
        run: |
          dbt run-operation drop_all_schemas --args "{ schema_name: ${{ env.TOY_SHOP_SCHEMA }} }" --profile toy_shop_${{ matrix.database }}

      - name: Create Schemas if needed
        if: matrix.database == 'redshift'
        working-directory: ./getting_started/toy_shop
        run: |
          dbt run-operation create_required_schemas --args "{ schema_name: ${{ env.TOY_SHOP_SCHEMA }} }" --profile toy_shop_${{ matrix.database }}

      - name: Initialize data and compute metrics
        working-directory: ./getting_started/toy_shop
        shell: bash
        run: |
          chmod +x ./setup_toy_shop.sh
          ./setup_toy_shop.sh toy_shop_${{ matrix.database }}

      - name: Send slack alert notification
        working-directory: ./getting_started/toy_shop
        if: github.repository == 're-data/re-data'
        run: |
          re_data notify slack --start-date 2021-01-01 --end-date 2021-01-11 --profile toy_shop_${{ matrix.database }} --webhook-url ${{secrets.RE_DATA_TESTING_SLACK_ALERTS_WEBHOOK}} --subtitle="<https://github.com/${{ github.repository }}/commit/${{ github.sha }} |View Commit> - (${{ matrix.database }})"

      - uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Copy overview data
        run: "cp getting_started/toy_shop/target/re_data/overview.json re_data_ui/public/overview.json"
        shell: bash

      - name: Copy dbt manifest
        run: "cp getting_started/toy_shop/target/manifest.json re_data_ui/public/dbt_manifest.json"
        shell: bash

      - name: Set homepage in package.json
        working-directory: ./re_data_ui
        run: contents=$(jq '.homepage="https://${{env.GITHUB_REPOSITORY_OWNER_PART_SLUG}}.github.io/${{env.GITHUB_REPOSITORY_NAME_PART_SLUG}}/ui-${{env.GITHUB_REF_SLUG}}-${{ matrix.database }}"' package.json) && echo "${contents}" > package.json
        shell: bash

      - name: Install dependencies
        working-directory: ./re_data_ui
        run: |
          npm install

      - name: Build app for production
        working-directory: ./re_data_ui
        run: npm run build
        env:
          PUBLIC_URL: https://${{env.GITHUB_REPOSITORY_OWNER_PART_SLUG}}.github.io/${{env.GITHUB_REPOSITORY_NAME_PART_SLUG}}/ui-${{env.GITHUB_REF_SLUG}}-${{ matrix.database }}

      - name: Keep only index.html, overview json and dbt_manifest.json file
        working-directory: ./re_data_ui/build
        run: |
          rm -rf static
          shopt -s extglob
          rm -- !(index.html|overview.json|dbt_manifest.json)

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./re_data_ui/build
          destination_dir: ./ui-${{env.GITHUB_REF_SLUG}}-${{ matrix.database }}

  clean-up-schemas:
    runs-on: ubuntu-latest
    if: github.event_name == 'delete' && github.repository == 're-data/re-data'
    strategy:
      fail-fast: false
      matrix:
        database: [snowflake, bigquery, redshift]
    steps:        
      - name: Check out
        uses: actions/checkout@v2

      - uses: actions/setup-python@v1
        with:
          python-version: "3.7.x"

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Set the TOY_SHOP_SCHEMA environment variable
        run: |
          echo "TOY_SHOP_SCHEMA=toy_shop_${GITHUB_EVENT_REF_SLUG//-/_}" >> $GITHUB_ENV

      - name: Print TOY_SHOP_SCHEMA
        run: |
          echo $TOY_SHOP_SCHEMA

      - name: Decode service account for BigQuery
        if: matrix.database == 'bigquery'
        run: 'echo $BIGQUERY_TESTING_SERVICE_ACCOUNT_BASE64 | base64 --decode > $BIGQUERY_TESTING_SERVICE_ACCOUNT_PATH'
        shell: bash

      - name: Install dependencies and drop branch schema
        working-directory: ./getting_started/toy_shop
        run: |
          pip install -r requirements.txt
          pip install dbt-${{ matrix.database }}==1.0.0
          dbt deps
          dbt run-operation drop_all_schemas --args "{ schema_name: ${{ env.TOY_SHOP_SCHEMA }} }" --profile toy_shop_${{ matrix.database }}