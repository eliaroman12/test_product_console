name: Generate UI for toy_shop project

on: [push, delete]

env:
  DBT_PROFILES_DIR: ${{ github.workspace }}/getting_started/toy_shop
  RE_DATA_CONFIG_DIR: ${{ github.workspace }}/getting_started/toy_shop
  SNOWFLAKE_RE_DATA_TESTING_ACCOUNT: ${{ secrets.SNOWFLAKE_RE_DATA_TESTING_ACCOUNT }}
  RE_DATA_TESTING_USER: ${{ secrets.RE_DATA_TESTING_USER }}
  RE_DATA_TESTING_PASSWORD: ${{ secrets.RE_DATA_TESTING_PASSWORD }}
  REDSHIFT_RE_DATA_TESTING_HOST: ${{ secrets.REDSHIFT_RE_DATA_TESTING_HOST }}
  BIGQUERY_TESTING_TYPE: ${{ secrets.BIGQUERY_TESTING_TYPE }}
  BIGQUERY_TESTING_PROJECT_ID: ${{ secrets.BIGQUERY_TESTING_PROJECT_ID }}
  BIGQUERY_TESTING_PRIVATE_KEY_ID: ${{ secrets.BIGQUERY_TESTING_PRIVATE_KEY_ID }}
  BIGQUERY_TESTING_PRIVATE_KEY: ${{ secrets.BIGQUERY_TESTING_PRIVATE_KEY }}
  BIGQUERY_TESTING_CLIENT_EMAIL: ${{ secrets.BIGQUERY_TESTING_CLIENT_EMAIL }}
  BIGQUERY_TESTING_CLIENT_ID: ${{ secrets.BIGQUERY_TESTING_CLIENT_ID }}
  BIGQUERY_TESTING_AUTH_URI: ${{ secrets.BIGQUERY_TESTING_AUTH_URI }}
  BIGQUERY_TESTING_TOKEN_URI: ${{ secrets.BIGQUERY_TESTING_TOKEN_URI }}
  BIGQUERY_TESTING_AUTH_PROVIDER_X509_CERT_URL: ${{ secrets.BIGQUERY_TESTING_AUTH_PROVIDER_X509_CERT_URL }}
  BIGQUERY_TESTING_CLIENT_X509_CERT_URL: ${{ secrets.BIGQUERY_TESTING_CLIENT_X509_CERT_URL }}
  RE_DATA_SEND_ANONYMOUS_USAGE_STATS: 0
  DBT_VERSION: 1.7

jobs:
  generate-ui:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    steps:
      - name: Check out
        uses: actions/checkout@v2

      - uses: actions/setup-python@v4
        with:
          python-version: "3.8.x"

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Configure re_data.yml
        uses: mikefarah/yq@master
        with:
          cmd: |
            yq -i '.notifications.slack.webhook_url = "${{secrets.RE_DATA_TESTING_SLACK_ALERTS_WEBHOOK}}"' ./getting_started/toy_shop/re_data.yml 
            yq -i '.notifications.email.smtp_password = "${{secrets.RE_DATA_SENDGRID_API_KEY}}"' ./getting_started/toy_shop/re_data.yml


      - name: Install re_data and python dependencies
        working-directory: .
        run: |
          pip install --upgrade pip
          pip install -e .
          pip install dbt-postgres==$DBT_VERSION

      - name: Install dbt dependencies
        working-directory: ./getting_started/toy_shop
        run: |
          dbt --version
          dbt deps

      - name: Initialize data and compute metrics
        working-directory: ./getting_started/toy_shop
        shell: bash
        run: |
          chmod +x ./setup_toy_shop.sh
          ./setup_toy_shop.sh toy_shop_postgres

      - name: Send alert notifications to various channels
        working-directory: ./getting_started/toy_shop
        if: github.repository == 're-data/re-data' && !env.ACT
        run: |
          re_data notify slack --start-date 2021-01-01 --end-date 2021-01-11 --profiles-dir ${{env.DBT_PROFILES_DIR}} --project-dir ./ \
          --profile toy_shop_postgres --webhook-url ${{secrets.RE_DATA_TESTING_SLACK_ALERTS_WEBHOOK}} --subtitle="<https://github.com/${{ github.repository }}/commit/${{ github.sha }} |View Commit> - (postgres)"

      - uses: actions/setup-node@v2
        with:
          node-version: "16.13.0"

      - name: Set homepage in package.json
        if: ${{ !env.ACT }}
        working-directory: ./re_data_ui
        run: contents=$(jq '.homepage="https://${{env.GITHUB_REPOSITORY_OWNER_PART_SLUG}}.github.io/${{env.GITHUB_REPOSITORY_NAME_PART_SLUG}}/ui-${{env.GITHUB_REF_SLUG}}"' package.json) && echo "${contents}" > package.json
        shell: bash

      - name: Install dependencies
        working-directory: ./re_data_ui
        run: |
          npm install

      - name: Build app for production
        working-directory: ./re_data_ui
        shell: bash
        run: ./build.sh
        env:
          PUBLIC_URL: https://${{env.GITHUB_REPOSITORY_OWNER_PART_SLUG}}.github.io/${{env.GITHUB_REPOSITORY_NAME_PART_SLUG}}/ui-${{env.GITHUB_REF_SLUG}}

      - name: Generate re_data artefacts
        working-directory: ./getting_started/toy_shop
        run: |
          re_data overview generate --start-date 2021-01-01 --profiles-dir ${{env.DBT_PROFILES_DIR}} --project-dir ./ --profile toy_shop_postgres

      - name: Deploy
        if: ${{ !env.ACT }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./getting_started/toy_shop/target/re_data
          destination_dir: ./ui-${{env.GITHUB_REF_SLUG}}

  generate-ui-other-dbs:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.repository == 're-data/re-data'
    strategy:
      fail-fast: false
      matrix:
        database: [snowflake, bigquery, redshift]
    steps:
      - name: Check out
        uses: actions/checkout@v2

      - uses: actions/setup-python@v4
        with:
          python-version: "3.8.x"

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Configure re_data.yml
        uses: mikefarah/yq@master
        with:
          cmd: |
            yq -i '.notifications.slack.webhook_url = "${{secrets.RE_DATA_TESTING_SLACK_ALERTS_WEBHOOK}}"' ./getting_started/toy_shop/re_data.yml 
            yq -i '.notifications.email.smtp_password = "${{secrets.RE_DATA_SENDGRID_API_KEY}}"' ./getting_started/toy_shop/re_data.yml

      - name: Set the TOY_SHOP_SCHEMA environment variable
        run: |
          echo "TOY_SHOP_SCHEMA=toy_shop_${GITHUB_REF_SLUG//[^[:alnum:]]/_}" >> $GITHUB_ENV

      - name: Print TOY_SHOP_SCHEMA
        run: |
          echo $TOY_SHOP_SCHEMA

      - name: Install re_data and python dependencies
        working-directory: .
        run: |
          pip install -e .
          pip install dbt-${{ matrix.database }}==$DBT_VERSION

      - name: Replace sources schema in dbt_project.yml vars
        working-directory: ./getting_started/toy_shop
        run: |
          sed -ri 's/toy_shop_sources/${{ env.TOY_SHOP_SCHEMA }}_sources/' dbt_project.yml
          cat dbt_project.yml

      - name: Install dbt dependencies
        working-directory: ./getting_started/toy_shop
        run: |
          dbt --version
          dbt deps

      - name: Drop schemas
        working-directory: ./getting_started/toy_shop
        run: |
          dbt run-operation drop_all_schemas --args "{ schema_name: ${{ env.TOY_SHOP_SCHEMA }} }" --profile toy_shop_${{ matrix.database }}

      - name: Create Schemas if needed
        if: matrix.database == 'redshift'
        working-directory: ./getting_started/toy_shop
        run: |
          dbt run-operation create_required_schemas --args "{ schema_name: ${{ env.TOY_SHOP_SCHEMA }} }" --profile toy_shop_${{ matrix.database }}

      - name: Initialize data and compute metrics
        working-directory: ./getting_started/toy_shop
        shell: bash
        run: |
          chmod +x ./setup_toy_shop.sh
          ./setup_toy_shop.sh toy_shop_${{ matrix.database }}

      - name: Send alert notifications to various channels
        working-directory: ./getting_started/toy_shop
        if: github.repository == 're-data/re-data' && !env.ACT
        run: |
          re_data notify slack --start-date 2021-01-01 --end-date 2021-01-11 --profiles-dir ${{env.DBT_PROFILES_DIR}} --project-dir ./ \
          --profile toy_shop_${{ matrix.database }} --webhook-url ${{secrets.RE_DATA_TESTING_SLACK_ALERTS_WEBHOOK}} --subtitle="<https://github.com/${{ github.repository }}/commit/${{ github.sha }} |View Commit> - (${{ matrix.database }})"

      - uses: actions/setup-node@v2
        with:
          node-version: "16.13.0"

      - name: Set homepage in package.json
        if: ${{ !env.ACT }}
        working-directory: ./re_data_ui
        run: contents=$(jq '.homepage="https://${{env.GITHUB_REPOSITORY_OWNER_PART_SLUG}}.github.io/${{env.GITHUB_REPOSITORY_NAME_PART_SLUG}}/ui-${{env.GITHUB_REF_SLUG}}-${{ matrix.database }}"' package.json) && echo "${contents}" > package.json
        shell: bash

      - name: Install dependencies
        working-directory: ./re_data_ui
        run: |
          npm install

      - name: Build app for production
        if: ${{ !env.ACT }}
        working-directory: ./re_data_ui
        shell: bash
        run: ./build.sh
        env:
          PUBLIC_URL: https://${{env.GITHUB_REPOSITORY_OWNER_PART_SLUG}}.github.io/${{env.GITHUB_REPOSITORY_NAME_PART_SLUG}}/ui-${{env.GITHUB_REF_SLUG}}-${{ matrix.database }}

        # while deploying to gh-pages, redshift & bigquery encounter a race condition while pushing to the branch causing one to fail usually bigquery.
        # sleeping for 60s give enough? time for the redshift step to deploy to gh-pages before the BigQuery step begins
      - name: Sleep for 60 seconds (BigQuery)
        if: matrix.database == 'bigquery'
        run: sleep 60
        shell: bash

      - name: Generate re_data artefacts
        working-directory: ./getting_started/toy_shop
        run: |
          re_data overview generate --start-date 2021-01-01 --profiles-dir ${{env.DBT_PROFILES_DIR}} --project-dir ./ --profile toy_shop_${{ matrix.database }}

      - name: Deploy
        if: ${{ !env.ACT }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./getting_started/toy_shop/target/re_data
          destination_dir: ./ui-${{env.GITHUB_REF_SLUG}}-${{ matrix.database }}

  clean-up-schemas:
    runs-on: ubuntu-latest
    if: github.event_name == 'delete' && github.repository == 're-data/re-data'
    strategy:
      fail-fast: false
      matrix:
        database: [snowflake, bigquery, redshift]
    steps:        
      - name: Check out
        uses: actions/checkout@v2

      - uses: actions/setup-python@v4
        with:
          python-version: "3.8.x"

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Set the TOY_SHOP_SCHEMA environment variable
        run: |
          echo "TOY_SHOP_SCHEMA=toy_shop_${GITHUB_EVENT_REF_SLUG//[^[:alnum:]]/_}" >> $GITHUB_ENV

      - name: Print TOY_SHOP_SCHEMA
        run: |
          echo $TOY_SHOP_SCHEMA

      - name: Install dependencies and drop branch schema
        working-directory: ./getting_started/toy_shop
        run: |
          pip install dbt-${{ matrix.database }}==$DBT_VERSION
          dbt deps
          dbt run-operation drop_all_schemas --args "{ schema_name: ${{ env.TOY_SHOP_SCHEMA }} }" --profile toy_shop_${{ matrix.database }}

  clean-up-deployment:
    runs-on: ubuntu-latest
    if: github.event_name == 'delete'
    
    steps:        
      - name: Check out
        uses: actions/checkout@v2
        with:
          ref: gh-pages

      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v3.x

      - name: Delete generated documentation and observability UI for branch
        run: |
          ls
          rm -rf ${{env.GITHUB_EVENT_REF_SLUG}}
          rm -rf ui-${{env.GITHUB_EVENT_REF_SLUG}}
          rm -rf ui-${{env.GITHUB_EVENT_REF_SLUG}}-snowflake
          rm -rf ui-${{env.GITHUB_EVENT_REF_SLUG}}-bigquery
          rm -rf ui-${{env.GITHUB_EVENT_REF_SLUG}}-redshift

      - name: Update github pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./
          force_orphan: true
          keep_files: true
          # allow_empty_commit: true
