"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7919],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),c=u(n),m=o,h=c["".concat(l,".").concat(m)]||c[m]||p[m]||a;return n?r.createElement(h,i(i({ref:t},d),{},{components:n})):r.createElement(h,i({ref:t},d))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4066:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:5},i="Deployment \ud83d\ude80",s={unversionedId:"re_data/deployment",id:"re_data/deployment",title:"Deployment \ud83d\ude80",description:"Running re_data on production",source:"@site/docs/re_data/deployment.md",sourceDirName:"re_data",slug:"/re_data/deployment",permalink:"/master/docs/re_data/deployment",draft:!1,editUrl:"https://github.com/re-data/re-data/edit/master/docs/docs/re_data/deployment.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Anonymous data collection",permalink:"/master/docs/re_data/reference/anonymous_usage"},next:{title:"Q&A \ud83d\udcac",permalink:"/master/docs/re_data/qa"}},l={},u=[{value:"Running re_data on production",id:"running-re_data-on-production",level:3},{value:"run dbt on Airflow, Prefect, or other orchestration tools",id:"run-dbt-on-airflow-prefect-or-other-orchestration-tools",level:2},{value:"run dbt in dbt cloud",id:"run-dbt-in-dbt-cloud",level:2},{value:"re_data (and possibly dbt) run in GitHub Actions",id:"re_data-and-possibly-dbt-run-in-github-actions",level:2},{value:"More questions?",id:"more-questions",level:4}],d={toc:u},c="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"deployment-"},"Deployment \ud83d\ude80"),(0,o.kt)("h3",{id:"running-re_data-on-production"},"Running re_data on production"),(0,o.kt)("p",null,"re_data is designed to fit into existing workflows and can be run in many different ways. We will describe here the most common ways of running re_data in production."),(0,o.kt)("p",null,"In most cases, you would like to run re_data in the same place where your dbt models are run. That's why we will suggest you couple of options depending on how you are running dbt yourself."),(0,o.kt)("h2",{id:"run-dbt-on-airflow-prefect-or-other-orchestration-tools"},"run dbt on Airflow, Prefect, or other orchestration tools"),(0,o.kt)("p",null,"If you are using any of the popular orchestration tools, we advise you to create a new job that will run re_data after your dbt runs. This way you can be sure that re_data will be run after your dbt models are refreshed."),(0,o.kt)("p",null,"All of the orchestration tools allow quite easily run bash commands. The most important thing here is to make sure ",(0,o.kt)("inlineCode",{parentName:"p"},"re-data")," is actually available in the orchestration tool's environment. You can easily install re_data even in the same command running it by using ",(0,o.kt)("inlineCode",{parentName:"p"},"pip install re-data"),"."),(0,o.kt)("h2",{id:"run-dbt-in-dbt-cloud"},"run dbt in dbt cloud"),(0,o.kt)("p",null,"If you are running dbt in the dbt cloud, there are two options you can use to run re_data.\nFirstly ",(0,o.kt)("inlineCode",{parentName:"p"},"re-data")," is a dbt package and as such can be run in the dbt cloud by running a command"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"}," dbt run --select package:re_data\n")),(0,o.kt)("p",null,"This can compute all the backend models of re_data in your dbt cloud environment."),(0,o.kt)("p",null,"Unfortunately, it's not possible to run the ",(0,o.kt)("inlineCode",{parentName:"p"},"re_data run")," command directly in the dbt cloud, for this reason, if you want to generate ",(0,o.kt)("inlineCode",{parentName:"p"},"re-data")," UI we are recommending you set up a Github Action which will run ",(0,o.kt)("inlineCode",{parentName:"p"},"re_data overview")," command. This is the way we are running re_data (and dbt) ourselves, and we are happy to share our setup with you."),(0,o.kt)("h2",{id:"re_data-and-possibly-dbt-run-in-github-actions"},"re_data (and possibly dbt) run in GitHub Actions"),(0,o.kt)("p",null,"As mentioned this is how we are running dbt and re_data, and re_cloud ourselves so that it can be considered our favorite :) We recently make our analysis repo public so you can see easily see and copy all the setup required for running dbt and re_data this way. You can check out the repo: ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/re-data/analysis"},"HERE")),".\nThe most interesting part of it is the GitHub Actions which is running our whole setup, you can check our ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/re-data/analysis/blob/main/.github/workflows/re_data.yml"},"github action file here"))," "),(0,o.kt)("p",null,"One thing to notice is how to easily point re_data to the configuration file without making them part of the repo.\nre_data support variable ",(0,o.kt)("inlineCode",{parentName:"p"},"RE_DATA_CONFIG_DIR")," which can be used to point to a directory where your configuration files are stored. This way is very similar to dbt's ",(0,o.kt)("inlineCode",{parentName:"p"},"DBT_PROFILES_DIR")," env variable, which we are also using."),(0,o.kt)("p",null,"Lastly, we are using ",(0,o.kt)("inlineCode",{parentName:"p"},"yq")," to fill the proper values in our configuration files (from GitHub secrets) at the time of running the commands."),(0,o.kt)("h4",{id:"more-questions"},"More questions?"),(0,o.kt)("p",null,"Having more questions about this, join our ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://www.getre.io/slack"},"Slack! \ud83d\ude0a"))," and let us know!"))}p.isMDXComponent=!0}}]);